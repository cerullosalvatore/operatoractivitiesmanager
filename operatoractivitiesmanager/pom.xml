<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.salvatorecerullo.app</groupId>
	<artifactId>operatoractivitiesmanager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>operatoractivitiesmanager</name>
	<url>http://www.example.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.13</junit.version>
		<org.assertj.version>3.15.0</org.assertj.version>
		<org.mockito.version>3.2.4</org.mockito.version>
		<org.apache.logging.log4j.version>2.13.1</org.apache.logging.log4j.version>
		<org.apache.maven.plugins.version>3.0.0-M5</org.apache.maven.plugins.version>
		<org.pitest.version>1.5.2</org.pitest.version>
		<org.jacoco.version>0.8.6</org.jacoco.version>
		<org.eluder.coveralls.version>4.3.0</org.eluder.coveralls.version>
		<javax.xml.bind.version>2.3.1</javax.xml.bind.version>
		<org.sonarsource.scanner.maven.version>3.8.0.2131</org.sonarsource.scanner.maven.version>

		<sonar.organization>cerullosalvatore</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.projectKey>cerullosalvatore_operatoractivitiesmanager</sonar.projectKey>
		<sonar.coverage.exclusions>
			**/Main.*
		</sonar.coverage.exclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${org.assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${org.mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${org.apache.logging.log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${org.apache.logging.log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${org.apache.maven.plugins.version}</version>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${org.pitest.version}</version>
					<configuration>
						<excludedClasses>
							<param>com.salvatorecerullo.app.operatoractivitiesmanager</param>
						</excludedClasses>
						<targetClasses>
							<!-- excludes class from test -->
						</targetClasses>
						<targetTests>
							<!-- class to test -->
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>80</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${org.jacoco.version}</version>
					<configuration>
						<excludes>
							<exclude>**/Main.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>
						<!-- another execution possible is check with a configuration -->
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${org.eluder.coveralls.version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${javax.xml.bind.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<!-- Maven profiles are a mechanism that allows you to activate a subset 
		of configurations. Now in a standard Maven build, neither JaCoCo nor PIT 
		will be used; they can be enabled on the command line with -P and their ids. 
		For example, in this build they will both be enabled: mvn clean verify -Pjacoco,mutation-testing -->
	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation-testing</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured also in pluginManagement -->
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
